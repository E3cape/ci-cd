version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/workspace
    environment:
      DEPLOYMENT_NAME: ci-cd
      PROJECT_ID: playground-s-11-e35bef
      CLUSTER_NAME: cluster-name
      CLUSTER_NAME_STAG: ci-cd-stag
      CLOUDSDK_COMPUTE_ZONE: europe-north1-a
      CONTAINER_NAME: ci-cd
      IMAGE: ci-cd
      REG_ID: ci-cd
      REG_ID_PROD: ci-cd-prod
      IMG_TAG: 0.1.0
      PROJECT_NAME: ci-cd
      DEPLOYMENT_ENVIRONMENT: staging
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install nodejs and npm
          command: |
            curl -sL https://deb.nodesource.com/setup_10.x | bash -
            apt-get install -y nodejs
            nodejs --version
            apt-get install -y npm
            npm --version
      - run:
          name: Install node packages
          command: |
            npm install
      
      - run:
          name: Start app
          command: |
            npm start &

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - run:
          name: Build and Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              set -e
              echo "Deploying to ${DEPLOYMENT_ENVIRONMENT}"
              echo $ACCOUNT_KEY_STAGING > service_key.txt
              base64 -i service_key.txt -d > ${HOME}/gcloud-service-key.json
              gcloud auth activate-service-account ${ACCOUNT_ID} --key-file ${HOME}/gcloud-service-key.json
              gcloud config set project $PROJECT_ID
              gcloud --quiet config set container/cluster $CLUSTER_NAME
              gcloud config set compute/zone $CLOUDSDK_COMPUTE_ZONE
              gcloud --quiet container clusters get-credentials $CLUSTER_NAME
              docker build -t gcr.io/${PROJECT_ID}/${REG_ID}:$CIRCLE_SHA1 .
              gcloud docker -- push gcr.io/${PROJECT_ID}/${REG_ID}:$CIRCLE_SHA1
              echo $(($(date +%s%N)/1000000))
              kubectl version
              kubectl rollout status deployments/ci-cd -w --timeout=3m
              kubectl set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=gcr.io/${PROJECT_ID}/${REG_ID}:$CIRCLE_SHA1
              echo $(($(date +%s%N)/1000000))
              kubectl rollout status deployments/ci-cd -w --timeout=4m
              echo $(($(date +%s%N)/1000000))
              echo " Successfully deployed to ${DEPLOYMENT_ENVIRONMENT}"
            fi  
